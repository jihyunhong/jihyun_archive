{
  "tests": [
    {
      "name": "test1-1",
      "setup": "cd exercise; make clean",
      "run": "cd exercise && make one && ./swap",
      "input": "",
      "output": "[\\s\\S]*1 2[\\s\\S]*2 1[\\s\\S]*3 4[\\s\\S]*4 3[\\s\\S]*1 2 3 4 5[\\s\\S]*6 7 8 9 10 11 12[\\s\\S]*6 7 8 9 10 11 12[\\s\\S]*1 2 3 4 5[\\s\\S]*",
      "comparison": "regex",
      "timeout": 1,
      "points": 2
    },
    {
      "name": "test1-2",
      "setup": "cd exercise; make clean",
      "run": "cd exercise && make one && ./swap",
      "input": "",
      "output": "[\\s\\S]*000100100000(100|001)[\\s\\S]*",
      "comparison": "regex",
      "timeout": 1,
      "points": 3
    },
    {
      "name": "test2-1",
      "setup": "cd exercise; make clean",
      "run": "cd exercise && make two && ./maximizeUtility",
      "input": "",
      "output": "[\\s\\S]*Item 1 Quantity: 10.909[\\s\\S]*Item 2 Quantity: 9.0909[\\s\\S]*Max utility gained: 161.8[\\s\\S]*Item 1 Quantity: 378.[\\s\\S]*Item 2 Quantity: 82.840[\\s\\S]*Max utility gained: 1207.[\\s\\S]*Item 1 Quantity: 0[\\s\\S]*Item 2 Quantity: 885.71[\\s\\S]*Max utility gained: 2214.[\\s\\S]*Item 1 Quantity: 229.1[\\s\\S]*Item 2 Quantity: 0[\\s\\S]*Max utility gained: 1145.8[\\s\\S]*",
      "comparison": "regex",
      "timeout": 1,
      "points": 5
    }
  ]
}